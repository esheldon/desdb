#!/bin/bash
# Download DES coadd files. 
#
#  usage:  des-wget-coadd run
#
# put your user name and password in ~/.netrc. Don't make it
# readable to anyone but you.
#
# All data are copied under the $DESDATA directory
#
#   $DESDATA/OPS/coadd/${run}/coadd/
#
# Author
#   Erin Sheldon, Brookhaven National Laboratory
# Changes
#     login and password should be stored in ~/.netrc
#
#        machine {host} login {login} password {password}
#   
#

function usage_and_exit {
    echo "
Usage 
        des-wget-coadd run

Description

        Download images and catalogs for the input run, optionally
        limiting to a particular exposure

            \$DESDATA/OPS/coadd/\${run}/coadd/\${expname}
        
        where \$DESDATA is an environment variable pointing to the base of your
        DES data area.  You should set \$DESREMOTE is the url of the server.
"
    exit 1
}

DESDATA=.
if [[ ${DESDATA:+1} == "" ]]; then
    echo "set DESDATA environment variable"
    exit 1
fi
if [[ ${DESREMOTE:+1} == "" ]]; then
    echo "set DESREMOTE environment variable"
    exit 1
fi

if [[ $# -lt 1 ]]; then
    usage_and_exit
fi

run="$1"
expname="None"

local_url="${DESDATA}/OPS/coadd/${run}/coadd"
remote_url="${DESREMOTE}/OPS/coadd/${run}/coadd"

cut_dirs=6
reject="*_det*"

echo "
    run:     $run
    remote:  $remote_url
    local:   $local_url
"

if [[ ! -e $local_url ]]; then
    echo "making dir: $local_url"
    mkdir -p "$local_url"
    if [[ $? != "0" ]]; then
        echo "failed to make dir, exiting"
        exit 1
    fi
fi

echo "chdir to dir $local_url"
cd "$local_url"
if [[ "$?" != "0" ]]; then
    echo "Failed to chdir to: $local_url"
    exit 1
fi

# No following slash on URL or it won't work!
# -c means continue downloading, as opposed to name.1 business
# -nH no host directories
# use -nv for non-verbose 
#    --progress=dot:mega     \
wget                        \
    --no-check-certificate  \
    -c                      \
    -nv                     \
    --mirror                \
    -nH                     \
    --cut-dirs=$cut_dirs    \
    --no-parent             \
    --tries 50              \
    --reject "$reject"      \
    "$remote_url"
